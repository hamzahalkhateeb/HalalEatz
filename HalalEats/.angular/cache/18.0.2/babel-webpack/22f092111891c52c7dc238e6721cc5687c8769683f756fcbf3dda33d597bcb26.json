{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./succesfull-payment.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./succesfull-payment.component.css?ngResource\";\nimport { CommonModule } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nlet SuccesfullPaymentComponent = class SuccesfullPaymentComponent {\n  constructor(route, router, http) {\n    this.route = route;\n    this.router = router;\n    this.http = http;\n    this.isCapturedSubject = new BehaviorSubject(false);\n    this.isCaptured$ = this.isCapturedSubject.asObservable();\n  }\n  ngOnInit() {\n    console.log(\"successfully paym,ent page loaded!!!!\");\n    this.route.queryParams.subscribe(params => {\n      this.token = params['token'];\n      this.payerId = params['payerId'];\n      this.orderId = params['orderId'];\n      console.log(`paymentId aka token in successful payment page: ${this.token}`);\n      console.log(`orderId in successfil payment page: ${this.orderId}`);\n      if (this.token && this.orderId) {\n        console.log(`paymentId aka token: ${this.token}`);\n        console.log(`orderId: ${this.orderId}`);\n        console.log('about to send capture payment request');\n        this.http.post(`http://localhost:3000/capturePayment`, {\n          token: this.token,\n          orderId: this.orderId\n        }).subscribe({\n          next: data => {\n            if (data.success) {\n              console.log(` ${data.message}`);\n              this.isCapturedSubject.next(true);\n            } else {\n              alert(data.message);\n            }\n          },\n          error: error => {\n            console.error('error: ', error);\n          }\n        });\n        console.log('sent capture payment request successfully');\n      }\n    });\n  }\n  toDashboard() {\n    console.log('proceed btn clicked');\n    this.router.navigateByUrl('/dashboard');\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: ActivatedRoute\n  }, {\n    type: Router\n  }, {\n    type: HttpClient\n  }];\n};\nSuccesfullPaymentComponent = __decorate([Component({\n  selector: 'app-succesfull-payment',\n  standalone: true,\n  imports: [FormsModule, CommonModule],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], SuccesfullPaymentComponent);\nexport { SuccesfullPaymentComponent };","map":{"version":3,"names":["CommonModule","HttpClient","Component","FormsModule","ActivatedRoute","Router","BehaviorSubject","SuccesfullPaymentComponent","constructor","route","router","http","isCapturedSubject","isCaptured$","asObservable","ngOnInit","console","log","queryParams","subscribe","params","token","payerId","orderId","post","next","data","success","message","alert","error","toDashboard","navigateByUrl","_","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\Hamzah Alkhateeb\\Desktop\\Halal Eatz\\HalalEats\\src\\app\\succesfull-payment\\succesfull-payment.component.ts"],"sourcesContent":["\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-succesfull-payment',\r\n  standalone: true,\r\n  imports: [FormsModule, CommonModule],\r\n  templateUrl: './succesfull-payment.component.html',\r\n  styleUrl: './succesfull-payment.component.css'\r\n})\r\nexport class SuccesfullPaymentComponent implements OnInit{\r\n\r\n  token! : any;\r\n  payerId!: any;\r\n  orderId!: any;\r\n  private isCapturedSubject = new BehaviorSubject<boolean>(false);\r\n  isCaptured$ = this.isCapturedSubject.asObservable();\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router, private http: HttpClient) {}\r\n\r\n  ngOnInit(): void {\r\n\r\n    console.log(\"successfully paym,ent page loaded!!!!\");\r\n\r\n    this.route.queryParams.subscribe(params => {\r\n      this.token = params['token'];\r\n      this.payerId = params['payerId'];\r\n      this.orderId = params['orderId'];\r\n      \r\n      console.log(`paymentId aka token in successful payment page: ${this.token}`);\r\n      console.log(`orderId in successfil payment page: ${this.orderId}`);\r\n    \r\n      if(this.token && this.orderId){\r\n        console.log(`paymentId aka token: ${this.token}`);\r\n        console.log(`orderId: ${this.orderId}`);\r\n        console.log('about to send capture payment request');\r\n        this.http.post(`http://localhost:3000/capturePayment`, {token: this.token, orderId: this.orderId})\r\n        .subscribe({\r\n          next:(data: any)=>{\r\n            if (data.success){\r\n              console.log(` ${data.message}`);\r\n              this.isCapturedSubject.next(true);\r\n            } else{\r\n              alert(data.message);\r\n            }\r\n          },error : (error: any) =>{\r\n            console.error('error: ', error);\r\n          }\r\n        }); \r\n        console.log('sent capture payment request successfully'); \r\n      }\r\n      \r\n\r\n    });\r\n\r\n  }\r\n\r\n  toDashboard(): void {\r\n\r\n    console.log('proceed btn clicked')\r\n    this.router.navigateByUrl('/dashboard');\r\n    \r\n  }\r\n\r\n    \r\n    \r\n  }\r\n\r\n\r\n\r\n\r\n"],"mappings":";;;AACA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,UAAU,QAAQ,sBAAsB;AACjD,SAASC,SAAS,QAAgB,eAAe;AACjD,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,cAAc,EAAEC,MAAM,QAAQ,iBAAiB;AACxD,SAASC,eAAe,QAAQ,MAAM;AAW/B,IAAMC,0BAA0B,GAAhC,MAAMA,0BAA0B;EAQrCC,YAAoBC,KAAqB,EAAUC,MAAc,EAAUC,IAAgB;IAAvE,KAAAF,KAAK,GAALA,KAAK;IAA0B,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,IAAI,GAAJA,IAAI;IAHvE,KAAAC,iBAAiB,GAAG,IAAIN,eAAe,CAAU,KAAK,CAAC;IAC/D,KAAAO,WAAW,GAAG,IAAI,CAACD,iBAAiB,CAACE,YAAY,EAAE;EAE2C;EAE9FC,QAAQA,CAAA;IAENC,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;IAEpD,IAAI,CAACR,KAAK,CAACS,WAAW,CAACC,SAAS,CAACC,MAAM,IAAG;MACxC,IAAI,CAACC,KAAK,GAAGD,MAAM,CAAC,OAAO,CAAC;MAC5B,IAAI,CAACE,OAAO,GAAGF,MAAM,CAAC,SAAS,CAAC;MAChC,IAAI,CAACG,OAAO,GAAGH,MAAM,CAAC,SAAS,CAAC;MAEhCJ,OAAO,CAACC,GAAG,CAAC,mDAAmD,IAAI,CAACI,KAAK,EAAE,CAAC;MAC5EL,OAAO,CAACC,GAAG,CAAC,uCAAuC,IAAI,CAACM,OAAO,EAAE,CAAC;MAElE,IAAG,IAAI,CAACF,KAAK,IAAI,IAAI,CAACE,OAAO,EAAC;QAC5BP,OAAO,CAACC,GAAG,CAAC,wBAAwB,IAAI,CAACI,KAAK,EAAE,CAAC;QACjDL,OAAO,CAACC,GAAG,CAAC,YAAY,IAAI,CAACM,OAAO,EAAE,CAAC;QACvCP,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;QACpD,IAAI,CAACN,IAAI,CAACa,IAAI,CAAC,sCAAsC,EAAE;UAACH,KAAK,EAAE,IAAI,CAACA,KAAK;UAAEE,OAAO,EAAE,IAAI,CAACA;QAAO,CAAC,CAAC,CACjGJ,SAAS,CAAC;UACTM,IAAI,EAAEC,IAAS,IAAG;YAChB,IAAIA,IAAI,CAACC,OAAO,EAAC;cACfX,OAAO,CAACC,GAAG,CAAC,IAAIS,IAAI,CAACE,OAAO,EAAE,CAAC;cAC/B,IAAI,CAAChB,iBAAiB,CAACa,IAAI,CAAC,IAAI,CAAC;YACnC,CAAC,MAAK;cACJI,KAAK,CAACH,IAAI,CAACE,OAAO,CAAC;YACrB;UACF,CAAC;UAACE,KAAK,EAAIA,KAAU,IAAI;YACvBd,OAAO,CAACc,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;UACjC;SACD,CAAC;QACFd,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;MAC1D;IAGF,CAAC,CAAC;EAEJ;EAEAc,WAAWA,CAAA;IAETf,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClC,IAAI,CAACP,MAAM,CAACsB,aAAa,CAAC,YAAY,CAAC;EAEzC;EAAC,QAAAC,CAAA,G;;;;;;;;AApDU1B,0BAA0B,GAAA2B,UAAA,EAPtChC,SAAS,CAAC;EACTiC,QAAQ,EAAE,wBAAwB;EAClCC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAAClC,WAAW,EAAEH,YAAY,CAAC;EACpCsC,QAAA,EAAAC,oBAAkD;;CAEnD,CAAC,C,EACWhC,0BAA0B,CAwDpC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}