{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./restaurant-page.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./restaurant-page.component.css?ngResource\";\nimport { CommonModule } from '@angular/common';\nimport { HttpClient } from '@angular/common/http';\nimport { Component } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nlet RestaurantPageComponent = class RestaurantPageComponent {\n  constructor(route, router, http) {\n    this.route = route;\n    this.router = router;\n    this.http = http;\n    this.orderArray = [];\n  }\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      this.restaurantId = params['restaurantId'];\n    });\n    this.LoadRestaurantPackage(this.restaurantId);\n  }\n  LoadRestaurantPackage(restaurantId) {\n    this.http.post('http://localhost:3000/LoadRestaurantAdminPackage', {\n      Id: restaurantId,\n      userType: 'consumer'\n    }, {\n      withCredentials: true\n    }).subscribe({\n      next: data => {\n        if (data.success) {\n          this.menue = JSON.parse(data.menue);\n          this.mealsArray = this.menue.meals.map(mealString => JSON.parse(mealString));\n          this.drinksArray = this.menue.drinks.map(drinkString => JSON.parse(drinkString));\n          this.desertsArray = this.menue.deserts.map(desertString => JSON.parse(desertString));\n        } else {\n          alert(data.message);\n        }\n      },\n      error: error => {\n        console.error('error: ', error);\n      }\n    });\n  }\n  addToCart(itemName, itemDescription, itemPrice) {\n    for (let i = 0; i < this.orderArray.length; i++) {\n      if (this.orderArray[i].name == itemName && this.orderArray[i].unit_amount.value == itemPrice && this.orderArray[i].description == itemDescription) {\n        this.orderArray[i].quantity++;\n        return;\n      }\n    }\n    this.orderArray.push({\n      name: itemName,\n      description: itemDescription,\n      quantity: 1,\n      unit_amount: {\n        currency_code: 'AUD',\n        value: itemPrice\n      }\n    });\n  }\n  dlt(itemName, itemDescription, itemPrice) {\n    for (let i = 0; i < this.orderArray.length; i++) {\n      if (this.orderArray[i].name == itemName && this.orderArray[i].unit_amount.value == itemPrice && this.orderArray[i].description == itemDescription) {\n        if (this.orderArray[i].quantity > 1) {\n          this.orderArray[i].quantity--;\n          break;\n        } else {\n          this.orderArray.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n  getTotal() {\n    let total = 0;\n    for (let i = 0; i < this.orderArray.length; i++) {\n      total += this.orderArray[i].quantity * this.orderArray[i].unit_amount.value;\n    }\n    return total;\n  }\n  checkout(totalPrice) {\n    console.log(`restaurant id: ${this.restaurantId}`);\n    console.log(JSON.stringify(this.orderArray));\n    this.orderArray.forEach(item => {\n      item.quantity = item.quantity.toString();\n      if (typeof item.unit_amount.value == 'string') {} else {\n        item.unit_amount.value = item.unit_amount.value.toFixed(2).toString();\n      }\n    });\n    console.log(totalPrice.toFixed(2));\n    console.log(this.orderArray);\n    this.http.post(`http://localhost:3000/placeOrder`, {\n      restaurantId: this.restaurantId,\n      status: 'submitted, unpaid',\n      orderArray: JSON.stringify(this.orderArray),\n      totalPrice: totalPrice.toFixed(2)\n    }, {\n      withCredentials: true\n    }).subscribe({\n      next: data => {\n        if (data.success && data.redirectUrl) {\n          window.location.href = data.redirectUrl;\n        } else {\n          //\n        }\n      },\n      error: error => {\n        console.error('error: ', error);\n      }\n    });\n  }\n  static #_ = this.ctorParameters = () => [{\n    type: ActivatedRoute\n  }, {\n    type: Router\n  }, {\n    type: HttpClient\n  }];\n};\nRestaurantPageComponent = __decorate([Component({\n  selector: 'app-restaurant-page',\n  standalone: true,\n  imports: [FormsModule, CommonModule],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], RestaurantPageComponent);\nexport { RestaurantPageComponent };","map":{"version":3,"names":["CommonModule","HttpClient","Component","FormsModule","ActivatedRoute","Router","RestaurantPageComponent","constructor","route","router","http","orderArray","ngOnInit","queryParams","subscribe","params","restaurantId","LoadRestaurantPackage","post","Id","userType","withCredentials","next","data","success","menue","JSON","parse","mealsArray","meals","map","mealString","drinksArray","drinks","drinkString","desertsArray","deserts","desertString","alert","message","error","console","addToCart","itemName","itemDescription","itemPrice","i","length","name","unit_amount","value","description","quantity","push","currency_code","dlt","splice","getTotal","total","checkout","totalPrice","log","stringify","forEach","item","toString","toFixed","status","redirectUrl","window","location","href","_","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["C:\\Users\\Hamzah Alkhateeb\\Desktop\\Halal Eatz\\HalalEats\\src\\app\\restaurant-page\\restaurant-page.component.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-restaurant-page',\r\n  standalone: true,\r\n  imports: [FormsModule, CommonModule],\r\n  templateUrl: './restaurant-page.component.html',\r\n  styleUrl: './restaurant-page.component.css'\r\n})\r\nexport class RestaurantPageComponent implements OnInit {\r\n\r\n  restaurantId!: number;\r\n  \r\n  menue!: any;\r\n  menueId!: any;\r\n  mealsArray: any;\r\n  drinksArray: any;\r\n  desertsArray: any;\r\n\r\n  orderArray: Array<{\r\n    name: string,\r\n    description: string,\r\n    quantity: any,\r\n    unit_amount: {\r\n      currency_code : string,\r\n      value: any,\r\n    }\r\n    \r\n  }> = [];\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router, private http: HttpClient) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.queryParams.subscribe(params => {\r\n      this.restaurantId = params['restaurantId'];\r\n      \r\n    });\r\n\r\n\r\n    this.LoadRestaurantPackage(this.restaurantId);\r\n\r\n  }\r\n\r\n  LoadRestaurantPackage(restaurantId: any){\r\n    this.http.post('http://localhost:3000/LoadRestaurantAdminPackage', {Id : restaurantId, userType: 'consumer'}, {withCredentials: true})\r\n    .subscribe({\r\n      next:(data: any)=>{\r\n        if (data.success){\r\n          this.menue = JSON.parse(data.menue);\r\n          this.mealsArray  = this.menue.meals.map((mealString: string) => JSON.parse(mealString));\r\n          this.drinksArray  = this.menue.drinks.map((drinkString: string) => JSON.parse(drinkString));\r\n          this.desertsArray  = this.menue.deserts.map((desertString: string)=> JSON.parse(desertString));\r\n\r\n        } else {\r\n          alert(data.message);\r\n        }\r\n      }, \r\n      error: (error: any) =>{\r\n        console.error('error: ', error);\r\n      }\r\n\r\n    });\r\n  }\r\n\r\n  addToCart(itemName: any, itemDescription: any,  itemPrice: any){\r\n\r\n\r\n    for (let i = 0; i < this.orderArray.length; i++) {\r\n      if(this.orderArray[i].name == itemName &&\r\n        this.orderArray[i].unit_amount.value == itemPrice && \r\n        this.orderArray[i].description == itemDescription){\r\n           \r\n        this.orderArray[i].quantity++;\r\n        return;\r\n      }\r\n    }\r\n\r\n\r\n    this.orderArray.push({\r\n      name: itemName,\r\n      description: itemDescription,\r\n      quantity: 1,\r\n      unit_amount: {\r\n        currency_code: 'AUD',\r\n        value: itemPrice\r\n      }\r\n        \r\n    })\r\n\r\n  }\r\n\r\n  dlt(itemName: any, itemDescription: any, itemPrice: any){\r\n    for (let i = 0; i < this.orderArray.length; i++){\r\n      if (this.orderArray[i].name == itemName &&\r\n          this.orderArray[i].unit_amount.value == itemPrice &&\r\n          this.orderArray[i].description == itemDescription){\r\n            if (this.orderArray[i].quantity > 1){\r\n              this.orderArray[i].quantity--;\r\n              break;\r\n            } else {\r\n              this.orderArray.splice(i, 1);\r\n              break;\r\n            }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  getTotal(): number{\r\n    let total = 0;\r\n\r\n    for(let i = 0; i < this.orderArray.length; i++){\r\n      total += this.orderArray[i].quantity * this.orderArray[i].unit_amount.value;\r\n    }\r\n\r\n    return total;\r\n    \r\n  }\r\n\r\n\r\n  checkout(totalPrice: number){\r\n\r\n    \r\n    console.log(`restaurant id: ${this.restaurantId}`);\r\n    console.log(JSON.stringify(this.orderArray));\r\n\r\n    this.orderArray.forEach(item => {\r\n      \r\n      item.quantity = item.quantity.toString();\r\n      if(typeof(item.unit_amount.value) == 'string'){\r\n\r\n      } else { item.unit_amount.value = (item.unit_amount.value.toFixed(2)).toString(); }\r\n      \r\n      \r\n\r\n    });\r\n    console.log(totalPrice.toFixed(2));\r\n    console.log(this.orderArray);\r\n\r\n    this.http.post(`http://localhost:3000/placeOrder`, { restaurantId: this.restaurantId, status: 'submitted, unpaid', orderArray: JSON.stringify(this.orderArray), totalPrice: totalPrice.toFixed(2)}, {withCredentials: true})\r\n    .subscribe({\r\n      next:(data: any)=>{\r\n        if (data.success && data.redirectUrl){\r\n          window.location.href = data.redirectUrl;\r\n        } else {\r\n          //\r\n        }\r\n      }, error : (error: any) =>{\r\n        console.error('error: ', error);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n    \r\n\r\n    \r\n}\r\n  \r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}