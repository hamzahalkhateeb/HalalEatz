name: CI/CD Pipeline

#trigger this workflow on push to main branch
on:
  push:
    branches: [main]

# first  major task is to build and push the angular image
jobs:
  build-angular:
    name: Build and Push Angular Image
    runs-on: ubuntu-latest


    steps:
      - name: Checkout code
        uses: actions/checkout@v3


      - name: Generate Angular environment.ts
        run: |
          mkdir -p ./HalalEats/src/environments
          echo "export const environment = {" > ./HalalEats/src/environments/environment.ts
          echo "  production: false," >> ./HalalEats/src/environments/environment.ts
          echo " googleMaps_api_key: '${{ secrets.GOOGLEMAPS_API_KEY }}'," >> ./HalalEats/src/environments/environment.ts
          echo " google_Oauth2_key: '${{ secrets.GOOGLE_OAUTH2_KEY }}'," >> ./HalalEats/src/environments/environment.ts
          echo " backendURL: '${{ secrets.BACKENDURL }}'," >> ./HalalEats/src/environments/environment.ts
          echo " base_image_url: '${{ secrets.BASE_IMAGE_URL }}'," >> ./HalalEats/src/environments/environment.ts
          echo "}" >> ./HalalEats/src/environments/environment.ts


      - name: set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Angular image
        uses: docker/build-push-action@v3
        with:
          context: ./HalalEats
          
          push: true
          tags: hamzahalkhateeb/angular-app:latest
  
  build-express:
    name: Build and Push Express Image
    runs-on: ubuntu-latest
    needs: build-angular # this job depends on the completion of the build-angular job

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate Express .env file
        run: |
          echo "google_api_auth_key=${{ secrets.GOOGLE_API_AUTH_KEY }}" >> ./API/.env
          echo "session_secret=${{ secrets.SESSION_SECRET }}" >> ./API/.env
          echo "paypal_oauth_ClientId=${{ secrets.PAYPAL_OAUTH_CLIENTID }}" >> ./API/.env
          echo "paypal_oauth_ClientSecret=${{ secrets.PAYPAL_OAUTH_CLIENTSECRET }}" >> ./API/.env
          echo "paypal_accessToken_auth_username=${{ secrets.PAYPAL_ACCESSTOKEN_AUTH_USERNAME }}" >> ./API/.env
          echo "paypal_accessToken_auth_password=${{ secrets.PAYPAL_ACCESSTOKEN_AUTH_PASSWORD}}" >> ./API/.env
          echo "db_name=${{ secrets.DB_NAME }}" >> ./API/.env
          echo "db_user=${{ secrets.DB_USER }}" >> ./API/.env
          echo "db_password=${{ secrets.DB_PASSWORD }}" >> ./API/.env
          echo "db_host=${{ secrets.DB_HOST }}" >> ./API/.env
          echo "db_dialect=${{ secrets.DB_DIALECT }}" >> ./API/.env
          echo "PORT=${{ secrets.PORT }}" >> ./API/.env
          echo "cloudinary_name=${{ secrets.CLOUDINARY_NAME }}" >> ./API/.env
          echo "cloudinary_api_key=${{ secrets.CLOUDINARY_API_KEY }}" >> ./API/.env
          echo "cloudinary_api_secret=${{ secrets.CLOUDINARY_API_SECRET }}" >> ./API/.env
          

      - name: set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Express image
        uses: docker/build-push-action@v3
        with:
          context: ./API
          push: true
          tags: hamzahalkhateeb/express-app:latest